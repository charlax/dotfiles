# Remove line matching pattern
cat file | sed '/^-\+/d'

# Keep only the fourth column of a ' ' delimited tabular file
cat filename | cut -d\  -f4

# Show only third column, with awk
cat filename | awk '{ print $3 }'

# Remove all occurrences of quotes
cat filename | sed "s/[\'\"]//g"

# Hide first line of output
cat $FILENAME | sed -n '1!p'

# Show list of most invited emails in calendar
# `grep -o` makes grep only show the matching pattern.
grep -o '[[:alnum:]+\.\_\-]*@[[:alnum:]+\.\_\-]*' file.ics | sort | uniq -c | sort -n | tail -n 100

# Show most common lines
cat file.txt | sort | uniq -c | sort -n -r | head -n 10

# Join lines with comma
cat lines.txt | paste -sd "," -
# Join lines
cat lines.txt | perl -pe 'if(!eof){s/\n//}'

# Wrap in quotes and join lines with comma, removing trailing comma
pbpaste | awk '{ printf "\"%s\",", $0 }' | sed 's/,$//'

# Split file in words
tr -s '[[:punct:][:space:]]' '\n' < words

# Lowercase everything
tr [:upper:] [:lower:]

# Multiline cat
cat << EOF >> /path/to/file
hello
world
EOF

# Multiline cat to file owned by root
cat << EOF | tee /path/to/file > /dev/null
hello
world
EOF

# Sum a column of numbers (number of commits)
# paste -sd+ - on macOs, without the "-" otherwise
git shortlog -sn | cut -f1 | paste -sd+ - | bc
# another way:
awk '{s+=$1} END {print s}' filename

# Insert line at top of file ("1i\" = insert after line 1)
gsed -i '1i\This is the new first line' filename.md

# For multiple search and replace with confirmation
# See vim's bufdo

# See: awk, grep, perl, sed, tr
#
# choose https://github.com/theryangeary/choose - simpler alternative to cut
# sd https://github.com/chmln/sd
# jc https://github.com/kellyjonbrazil/jc - parse cli into json

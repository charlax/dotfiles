# Cheatsheet for Vim regex
# Inspired by [vimtips](http://rayninfo.co.uk/vimtips.html).

# Replace all date in format `YYYYMMDD` to `MM/DD/YYYY`:
%s/\(20\d\{2}\)\(\d\{2}\)\(\d\{2}\)/\2\/\3\/\1/g

# Delete everything in parentheses
:%s/(.*)//g

# Grab email only, replacing the whole line
# File:
# Charlax <toaster@toasting.org>
:%s/.*<\([a-z.@]\+\)>/\1/g

# Delete everything after a character
# * Toaster: 1
# * Toaster: 2
# To delete everything after `:`:
:%s/:.*//

# Replace newline character "^M" and "^@"
:%s/<Ctrl-V><Ctrl-M>/\r/g

# Add a unique id to Markdown titles
#
# This is a good example of a complex regex which uses `\=` to trigger vim
# command execution.
%s%^\(#\+.*\)$%\=submatch(1).' (id::'.substitute(system('LC_ALL=C tr -cd "[:alnum:]" < /dev/urandom | fold -w15 | head -n1'), '\n','','g').')'%g
# BEFORE:
# Test
# AFTER:
# Test (id::nYgp7segfLWXeWM)

# Convert each NAME_LIKE_THIS to NameLikeThis in the current line.
:s#_*\(\u\)\(\u*\)#\1\L\2#g

# Match a whole word i.e. OS but not iOS
s/\<OS\>/OperatingSystem/g

# Wrap all lines in quotes
:%s/^\(.*\)$/"\1"/

# Wrap all words in line with backticks
:'<,'>s/\v([a-z]+)/`\1`/g

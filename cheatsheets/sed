# Other tools: tr, awk, grep, perl
# sd https://github.com/chmln/sd
# See string-manipulation

# On macOS, use GNU sed with `gsed

# Options
-E         # extended (modern) regex
-e         # append the editing command to the list
-i '.bak'  # edit files in-place with an extension '.bak'

# Tester:
# https://sed.js.org/index.html

# Add newlines
sed -E -e '/.*/G' -i '' $FILE

# Replace tabs
sed -E -e 's/	/ /g' -i '' $FILE

# Headings
sed -E -e 's/^(#+)(([[:digit:]]|[[:alpha:]])+)/\1 \2/g' -i '' $FILE

# Insert a blank line before and after each heading
sed -E -e '/^#+/{x;p;x;G;}' -i '' $FILE

# Lists
sed -E -e 's/^-[[:space:]]+/* /g' -i '' $FILE

# Remove trailing whitespace
sed -E -e 's/ *$//' -i '' $FILE

# Remove multiple spaces
sed -E -e 's/[[:space:]]+/ /g' -i '' $FILE

# Fix apostrophes
sed -E -e "s/â€™/'/g" -i '' $FILE

# Remove code blocks from markdown
cat $FILE | sed '/^```/,/^```/d'

# Remove line in file
set -i '/TO_MATCH/d' filename.txt

# Show from line $x to line $y
sed -n -e "$x,$y p" -e "$y q"

# Remove ## suffix and what follows
sed "s/##.*//"

# Append after match (requires GNU sed)
sed -i "/Monday/a- Overjoyed" songs.md

# See also:
# https://learnbyexample.github.io/learn_gnused/

# Presto SQL

(now Trino)

## Useful functions

Links:

- [Aggregate Functions — Presto 0.283 Documentation](https://prestodb.io/docs/current/functions/aggregate.html)

Functions:

- `coalesce`: `coalesce(true, NULL, NULL) == coalesce(NULL, NULL, true) == true`
- `arbitrary(x)`: returns an arbitrary non-null value of `x` if one exists
- `approx_percentile(price, 0.50)`: get the median

## Dates

https://prestodb.io/docs/current/functions/datetime.html

```sql
select * from tablename
where time > to_iso8601(TIMESTAMP '2021-04-06 00:00:00');

-- ms since epoch column
select
from_unixtime(t.created_at / 1000),
from_unixtime(t.created_at / 1000) at timezone "America/Los_Angeles",
from tablename
-- between comparison with timezone
where from_unixtime(t.created_at / 1000) between timestamp '2022-01-01 11:00:00 America/New_York' and timestamp '2022-01-01 12:00:00 America/New_York';

-- extract first day of week
date_trunc('week', created_at)
-- date difference
date_diff('minute', created_at, updated_at)
```

## Grouping

[SELECT — Presto 0.283 Documentation](https://prestodb.io/docs/current/sql/select.html)

The `ROLLUP` operator generates all possible subtotals for a given set of columns.

```sql
SELECT origin_state, origin_zip, sum(package_weight)
FROM shipping
GROUP BY ROLLUP (origin_state, origin_zip);
```

## WAF logs (AWS)

```sql
SELECT date_format(from_unixtime(timestamp/1000), '%Y-%m-%d %H:%i:%s'), httprequest.clientip, httprequest.uri, httprequest.headers  FROM "website_wafv2_web_acl"

where httprequest.uri like '%foo%'
and timestamp > 1615582953000

order by 1

limit 1000;
```

## Text

```sql
where httprequest.uri like '%\_foo' escape '\'

-- conversion between uuid and varchar
select cast(uuid() as varchar);
```

<!-- vim: set ft=markdown: -->

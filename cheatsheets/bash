# Resources:
#
# https://wiki.bash-hackers.org/
# https://github.com/jlevy/the-art-of-command-line
# https://github.com/onceupon/Bash-Oneliner

# https://betterdev.blog/minimal-safe-bash-script-template/

# while loop
while true; do
  echo "yes"
done

# Define default argument in bash script
ARG1=${1:-foo}
${LIFE-Happiness}   # defaults to Happiness if $LIFE is unset

# Get current script's directory
current_dir=$(dirname $0)

# Iterate over a list of things in a text file
for toaster in $(cat toasters.txt) ; do
     echo ${toaster}
done

# if... elif... else
if [ test ]; then
  echo "foo"
elif [ test ]; then
  echo "bar"
else
  echo "else"
fi

# Loop over array
array=(one two three)
for i in "${array[@]}"; do
    echo $i
done

# Simple arg handling
```bash
display_usage() {
    echo -e "Usage: $0 filename"
}

# $# number of arguments
# -ne    not equal

if [ $# -ne 1 ]; then
    echo -e "Invalid number of arguments"
    display_usage
    exit 1
fi

# Checking if PATH already includes something
case ":${PATH}:" in
    *:"$HOME/.cargo/bin":*)
        ;;
    *)
        # Prepending path in case a system-installed rustc needs to be overridden
        export PATH="$HOME/.cargo/bin:$PATH"
        ;;
esac

```

# Download files numbered 1 to 20
wget http://cloud.com/1/{1..20}.py

# options
# https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html

set -o verbose  # set option
set +o verbose  # unset option

verbose/-v      # display commands
errexit/-e      # exit on error
xtrace/-x       # print a trace of simple commands
nounset/-u      # exit if any variable is unset

# tests
# See `test` for more.

## Regex check
if [[ "$CURRENT_SHELL" =~ "zsh" ]]; then
fi

## User id
[[ $(id -u) -ne 0 ]] && echo "run as root!" && exit 1

## Check if command exists
if ! command -v $command &> /dev/null; then
fi

## Check command result
if command; then
fi

# -f "filename"             # file exists and is regular file
# See `test` for more

# Escape a single quote
echo 'j'"'"'attends'

# Redirect all output to /dev/null
do_something > /dev/null 2>&1

# Settings arguments programatically
args=()
args+=(--verbose true)
script "${args[@]}"

$0  # current script path
$@  # all args

# Shell Parameter Expansion
# https://www.gnu.org/software/bash/manual/bash.html#Shell-Parameter-Expansion
#
# https://wiki.bash-hackers.org/syntax/pe
# https://www.cyberciti.biz/tips/bash-shell-parameter-substitution-2.html

# Remove pattern
in="content/stuff/img"
echo "${in%/img}"  # content/stuff

# Set var for command
env who=world bash -c 'echo "Hello $who"'
(export who=world; echo "Hello $who")

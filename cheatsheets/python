# Python cheats

```bash
# Get help about topic
pydoc sys.exit
```

## One liner

### Create a secret and encode with base64

```bash
python -c "import secrets; print(secrets.token_hex(), end='')" | base64
```

## Core features

### f-strings

https://www.python.org/dev/peps/pep-0498/

```
[[fill]align][sign][#][0][width][grouping_option][.precision][type]
```

```python
value = 1.11111111
f"{value:.4}" == "1.1111"
```

## Libs

### Functools

```python
functools.reduce(function, iterable, initializer)

# with function:
def reducer(accumulator, current):
    pass

```

### Iterator

```python
itertools.chain
itertools.chain.from_iterable
```

## Docstrings

- https://numpydoc.readthedocs.io/en/latest/format.html
- https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_numpy.html

## Types

https://mypy.readthedocs.io/en/stable/cheat_sheet_py3.html

### Decorators

```python
from typing import Any, Callable, TypeVar, Tuple, cast

F = TypeVar('F', bound=Callable[..., Any])


# A decorator that preserves the signature.
def my_decorator(func: F) -> F:
    def wrapper(*args, **kwds):
        print("Calling", func)
        return func(*args, **kwds)
    return cast(F, wrapper)


# A decorated function.
@my_decorator
def foo(a: int) -> str:
    return str(a)
```

## Troubleshooting

### Quickfix for `sys.path`

```
import os
import sys
sys.path.insert(0, os.path.abspath('.'))
```

### Fix Python after homebrew upgrade

tldr:

```bash
pipx reinstall-all
```

```bash
$ pip
zsh: /Users/.../Library/Python/3.7/bin/pip: bad interpreter: /usr/local/opt/python/bin/python3.7: no such file or directory
$ poetry
zsh: /Users/.../.local/bin/poetry: bad interpreter: /Users/.../.local/pipx/venvs/poetry/bin/python: no such file or directory

$ echo $PATH  # make sure Python is at latest version
$ which python3  # make sure it's brew's Python, otherwise: brew link python3
$ pipx reinstall-all
```

<!-- vim: set ft=markdown: -->

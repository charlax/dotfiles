# See also ssh-keygen

# Get version
ssh -V

# https://robotmoon.com/ssh-tunnels/
# Setup an SSH tunnel that tunnel localhost:4479 to remote:4479
# -f: background
# -N: do not issue a command
# -L [bind_address:]port:host:hostport
ssh -f -N -L 4479:localhost:4479 remote

# Setup an SSH tunnel that tunnels localhost:PORT to remote:PORT through another hop
ssh -N -L localhost:$PORT:$remote:$PORT BRIDGE_MACHINE_USER@BRIDGE_MACHINE

# Generate a public/private key
ssh-keygen -t rsa -b 4096 -C "your_email@example.com"

# Copy an SSH key to authorized_keys
cat ~/.ssh/id_rsa.pub | ssh $user@$host "mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys"
chmod 700 ~/.ssh
# Another option (requires ssh-copy-id)
ssh-copy-id user@host

# Restart sshd on Ubuntu
sudo systemctl restart ssh.service

# Force password authentication
ssh -o PreferredAuthentications=password -o PubkeyAuthentication=no $host

# Forward agent
ssh -A ...

# Debug Gitlab connection
ssh -Tvvv git@gitlab.com

# Connect through bastion
ssh -A -t $user@$bastion $user@$server

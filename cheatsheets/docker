# Delete all images, containers, volumes, networks for all stopped containers and unused images
docker system prune -a

# Build image
docker build -t thetest/thename:latest . && docker run -it --rm --name test thetest/thename:latest
# Override entrypoint
docker run -it --rm --name test --entrypoint /bin/bash test/top:latest

# Start an Ubuntu system
docker run -it ubuntu:latest /bin/bash

# Connect on a running container
docker exec -it $CONTAINER_ID bash

# Check the size of images
docker image ls

# Check the layers comprising an image
docker history $IMAGE_ID
# <missing> means the layer was built on another system

# Get labels, network, etc. for running container
docker inspect $CONTAINER_ID

# Show all ports
docker container ls --format "table {{.ID}}\t{{.Names}}\t{{.Ports}}" -a

# Get logs for a running container
docker logs $CONTAINER_ID

# List all containers ever created
docker ps --all

# Search for an image from registry
docker search postgres

# Show history for an image
docker history postgres

# Pause all processes within one or more containers
docker pause  # also: unpause

# Remove one or more containers
docker rm
# Remove one or more images
docker rmi

# Verbose and disable cache (the cache part does not seem to work)
docker compose build --progress=plain --no-cache=true

# Empty build cache and clean up stuff
docker system prune

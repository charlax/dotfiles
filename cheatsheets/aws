# Env var
AWS_PROFILE=...  # or --profile ...
AWS_REGION=...

# Get a CloudFormation template
aws cloudformation get-template --stack-name STACKNAME

# Get current account details
aws sts get-caller-identity

# EC2
# ===

# Start instances
aws ec2 start-instances --instance-ids i-...
#
# List all ec2 instances
aws ec2 describe-instances

# List ec2 instance ids matching tag "environment=prod:demo"
aws ec2 describe-instances --filters "Name=tag:environment,Values=prod:demo" --query "Reservations[*].Instances[*].InstanceId" --output text

# Get state and instances ids
aws ec2 describe-instances | jq '.Reservations[].Instances[] | {State,InstanceId}'

# IAM
# ===

# List roles
aws iam list-roles

# Lambda
# ======

aws --region us-east-1 lambda invoke --cli-binary-format raw-in-base64-out --function-name $name --payload file://test-payload.json --log-type Tail /dev/stdout

# Logs (CloudWatch)
# =================

# Create log group for lambda
aws --region eu-west-1 logs create-log-group --log-group-name /aws/lambda/$lambda_name

# S3

aws s3 sync build s3://$bucket_name/ --exclude ".DS_Store" --delete

# SSM
# ===

# Get SSM parameters
aws ssm get-parameters-by-path --path /path/ | jq .Parameters[].Name

# Set a SSM secret value
aws ssm put-parameter --overwrite --cli-input-json '{
  "Name": "",
  "Value": "",
  "Type": "SecureString",
  "KeyId": "alias/whatever"
}'

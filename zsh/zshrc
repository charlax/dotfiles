# For profiling (activate the print at the end)
# See doc/zsh_perf.md
# Also: $(which zsh) -lxv
# zmodload zsh/zprof

# Returns whether the given command is executable or aliased.
_has() {
  return $( whence $1 >/dev/null )
}

# Shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles

# ZSH Modules
# ===========

autoload -U promptinit zcalc zsh-mime-setup colors zmv cdr
colors
promptinit
zsh-mime-setup

autoload -Uz history-beginning-search-menu add-zsh-hook

export CLICOLOR=1; # ls uses colors if CLICOLOR is set to TRUE

# Colors for ls/gls
eval `gdircolors $HOME/.dir_colors 2> /dev/null`

# beeps are annoying
setopt NO_BEEP
# Do not throw error if no files matched glob pattern
# Useful because I often copy paste URL on the command line
unsetopt NOMATCH

# Activate bash-style comments
setopt interactivecomments

# Completion Stuff
# ================

if type brew &>/dev/null; then
    FPATH=$(brew --prefix)/share/zsh-completions:$FPATH
fi

# E.g. for poetry completions
FPATH=~/.zfunc:$FPATH

autoload -Uz compinit
if [[ "$OSTYPE" =~ ^darwin ]] && [ $(date +'%j') != $(/usr/bin/stat -f '%Sm' -t '%j' ${ZDOTDIR:-$HOME}/.zcompdump) ]; then
  compinit
  touch ${ZDOTDIR:-$HOME}/.zcompdump
else
  compinit -C
fi

bindkey -M viins '\C-i' complete-word

# History completion
# https://coderwall.com/p/jpj_6q
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

if [[ "$OSTYPE" == "linux-gnu" ]]; then
    bindkey "^[OA" up-line-or-beginning-search # Up
    bindkey "^[OB" down-line-or-beginning-search # Down
else
    bindkey "^[[A" up-line-or-beginning-search # Up
    bindkey "^[[B" down-line-or-beginning-search # Down
fi

# Keep Emacs ctrl-a ctrl-e behavior
bindkey "^A" vi-beginning-of-line
bindkey "^E" vi-end-of-line

# Faster
zstyle ':completion::complete:*' use-cache 1

# Case insensitive completion
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

zstyle ':completion:*' verbose yes
zstyle ':completion:*:descriptions' format '%B%d%b'
zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:warnings' format 'No matches for: %d'
zstyle ':completion:*' group-name ''
# https://github.com/spicycode/ze-best-zsh-config/blob/master/.zsh/completion.zsh
zstyle ':completion:*' completer _expand _complete _approximate _ignored

# Generate descriptions with magic.
zstyle ':completion:*' auto-description 'specify: %d'

# Don't prompt for a huge list, page it!
zstyle ':completion:*:default' list-prompt '%S%M matches%s'

# Don't prompt for a huge list, menu it!
zstyle ':completion:*:default' menu 'select=0'

# Have the newer files last so I see them first
zstyle ':completion:*' file-sort modification reverse

# Color code completion
zstyle ':completion:*' list-colors "=(#b) #([0-9]#)*=36=31"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

unsetopt LIST_AMBIGUOUS
setopt  COMPLETE_IN_WORD

# Separate man page sections.
zstyle ':completion:*:manuals' separate-sections true

zstyle ':completion:*' list-separator 'fREW'

# Complete with a menu for xwindow ids
zstyle ':completion:*:windows' menu on=0
zstyle ':completion:*:expand:*' tag-order all-expansions

# More errors allowed for large words and fewer for small words
zstyle ':completion:*:approximate:*' max-errors 'reply=(  $((  ($#PREFIX+$#SUFFIX)/3  ))  )'

# Errors format
zstyle ':completion:*:corrections' format '%B%d (errors %e)%b'

# Don't complete stuff already on the line
zstyle ':completion::*:(rm|vi):*' ignore-line true

# Don't complete directory we are already in (../here)
zstyle ':completion:*' ignore-parents parent pwd

zstyle ':completion::approximate*:*' prefix-needed false

# Sound completion for kill
# http://forums.gentoo.org/viewtopic-t-204402-start-0.html
zstyle ':completion:*:processes' command 'ps -au$USER'
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;32'

# Google Cloud
[[ -e /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc ]] && source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc

# History
# =======

# Where it gets saved
HISTFILE=~/.zsh_history

# Remember about a years worth of history (AWESOME)
SAVEHIST=10000
HISTSIZE=10000

# Options
# =======

# Make it possible to change directories without writing cd
setopt auto_cd
# Sets the search path for the cd command
cdpath=($HOME $CODE_PATH)

# Don't overwrite, append!
setopt APPEND_HISTORY

# Killer: share history between multiple shells
setopt SHARE_HISTORY

# If I type cd and then cd again, only save the last one
setopt HIST_IGNORE_DUPS

# Even if there are commands inbetween commands that are the same, still only save the last one
setopt HIST_IGNORE_ALL_DUPS

# Pretty    Obvious.  Right?
setopt HIST_REDUCE_BLANKS

# If a line starts with a space, don't save it.
setopt HIST_IGNORE_SPACE
setopt HIST_NO_STORE

# When using a hist thing, make a newline show the change before executing it.
setopt HIST_VERIFY

# Save the time and how long a command ran
setopt EXTENDED_HISTORY

setopt HIST_SAVE_NO_DUPS
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_FIND_NO_DUPS

# FZF
# ===

# FZF on Linux
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# fzf via Homebrew
if [ -e /usr/local/opt/fzf/shell/completion.zsh ]; then
  source /usr/local/opt/fzf/shell/key-bindings.zsh
  source /usr/local/opt/fzf/shell/completion.zsh
fi

# fzf + ag configuration
if _has fzf && _has ag; then
  export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND"
  # No need to specify colors
  # export FZF_DEFAULT_OPTS='
  # --color fg:242,bg:236,hl:65,fg+:15,bg+:239,hl+:108
  # --color info:108,prompt:109,spinner:108,pointer:168,marker:168
  # '
fi

# zoxide (smarter cd command)
if _has zoxide; then
    eval "$(zoxide init zsh --cmd j)"
fi

if [[ "$OSTYPE" =~ ^darwin ]]; then
    # Increase nb of fd soft limit
    # This will only apply to processes started from the shell.
    # $ ulimit -nS/-nH  # check the soft/hard limit
    # $ ulimit -a       # display all limits
    ulimit -n 20000
fi

# Keyboard shortcuts
# ==================
#
# Inspired by:
# http://chneukirchen.org/blog/archive/2012/02/10-new-zsh-tricks-you-may-not-know.html

# HELP
# ^[ is esc
# ^  is ctrl

# Bind delete key to something meaningful like... deleting.
bindkey    "^[[3~"          delete-char
bindkey    "^[3;5~"         delete-char

# ⌥ + ← or → - move one word backward/forward (like in other OS X apps)
bindkey "[D" backward-word
bindkey "[C" forward-word

# c-b (word backward) and c-f (word forward)
bindkey "^B" backward-word
bindkey "^F" forward-word

# Define words boundaries (removed "/")
WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'

# Use ctrl-z to go back to fg app
fancy-ctrl-z () {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh

if _has kubectl; then
    source <(kubectl completion zsh)
fi

# Load other files

# Source every .zsh file in this rep
for config_file ($ZSH/**/*.zsh) do
  source $config_file
done


# asdf (if it's there)
# this needs to be at the end because it updates $PATH
if _has asdf; then
    . $(brew --prefix asdf)/asdf.sh
fi

# Can be removed after 2023?
export USE_GKE_GCLOUD_AUTH_PLUGIN=True

# Activate for profiling (should remain at the end)
# zprof
